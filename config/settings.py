"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from mongoengine import connect

from config import constants

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%+uxj%vnvzvxqa9$l&lm65rz#3jq39e46h#h$04p+n7$dq4t@g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'monte_carlo_simulation'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Celery settings
CELERY_ACCEPT_CONTENT = ['json']
CELERY_ACKS_LATE = True
CELERY_BROKER_URL = constants.CELERY_BROKER
CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 86400}  # 24 hours
CELERY_ENABLE_UTC = True
CELERYD_HIJACK_ROOT_LOGGER = False
CELERY_RESULT_BACKEND = constants.CELERY_RESULT_BACKEND
CELERY_RESULT_SERIALIZER = 'json'
CELERY_SEND_EVENTS = True
CELERY_TASK_SERIALIZER = 'json'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

MONGO_DB_NAME = constants.MONGO_DB_NAME
MONGO_DB_HOST = constants.MONGO_DB_HOST
MONGO_DB_PORT = constants.MONGO_DB_PORT

assert any(elem is None for elem in [
           MONGO_DB_NAME, MONGO_DB_HOST, MONGO_DB_PORT]) is False

connect(MONGO_DB_NAME, host=MONGO_DB_HOST, alias='default', port=MONGO_DB_PORT)


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging configuration
CELERY_LOGFILE = './celery.log'
DJANGO_LOGFILE = './django.log'
BACKEND_LOGFILE = './backend.log'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {'format':
                    '%(asctime)s - %(levelname)s - %(name)s - %(message)s'
                    }
    },
    'handlers': {
        'celery_file':  {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': CELERY_LOGFILE,
        },
        'console':  {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'backend_file':  {
            'level': constants.LOG_LEVEL,
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': BACKEND_LOGFILE,
        },
        'django_file':  {
            'level': constants.LOG_LEVEL,
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': DJANGO_LOGFILE,
        },
    },
    'loggers': {
        'backend_logger': {
            'handlers': ['console', 'backend_file'],
            'level': constants.LOG_LEVEL,
            'propagate': False,  # neeeded to prevent double logging with root logger
        },
        'celery': {
            'handlers': ['celery_file', 'console'],
            'level': 'INFO',
            'propagate': False
        },
        'django': {
            'handlers': ['console', 'django_file'],
            'level': 'INFO',
            'propagate': False,
        }
    }
}
